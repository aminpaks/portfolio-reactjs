{"version":3,"sources":["Styleguide/+Layout/Layout.styled.ts","Styleguide/+Layout/Layout.tsx","Styleguide/+Layout/Section.tsx","Styleguide/Buttons/Buttons.tsx","Styleguide/Buttons/Route.tsx","Styleguide/Carousels/Carousels.tsx","Styleguide/Carousels/Route.tsx","Styleguide/GridSystem/Grid.styled.ts","Styleguide/GridSystem/MediaQuery.ts","Styleguide/GridSystem/Grid.tsx","Styleguide/GridSystem/Route.tsx","Styleguide/Panels/Panels.styled.ts","Styleguide/Panels/Panels.tsx","Styleguide/Panels/Route.tsx","Styleguide/Sections/Sections.tsx","Styleguide/Sections/Route.tsx","Styleguide/Spacings/Spacings.tsx","Styleguide/Spacings/Route.tsx","Styleguide/Tabs/Tabs.styled.ts","Styleguide/Tabs/Tabs.tsx","Styleguide/Tabs/Route.tsx","Styleguide/Typographies/Typographies.styled.ts","Styleguide/Typographies/Typographies.tsx","Styleguide/Typographies/Route.tsx","Styleguide/Page.tsx"],"names":["StyledLayoutContainer","styled","div","_templateObject","props","theme","colorSet","secondary","darken","Layout","_ref","navItems","children","react_default","a","createElement","map","item","key","url","Link","to","title","section","Section_templateObject","Buttons","useContext","ThemeContext","_useState","useState","_useState2","Object","slicedToArray","clickedTarget","setTarget","handleClick","useCallback","e","preventDefault","target","sectionTitle","element","node","querySelector","textContent","parentNode","getSectionTitle","childNodes","length","concat","Fragment","_Shared","suffix","style","top","position","zIndex","padding","backgroundColor","fade","border","borderRadius","boxShadow","userSelect","pointerEvents","fontWeight","UI_Kits","variant","textAlign","margin","text","Group","size","onClick","backgroundTheme","display","textTransform","href","rel","ButtonsRoute","match","Route","exact","path","component","getStandardStyles","extra","getRandomColor","color","getForegroundColor","objectSpread","fontSize","height","Carousels","paddingValue","setPaddingValue","Slide","draggable","arrowSize","slidesToShow","type","value","onChange","parseFloat","slidePadding","CarouselsRoute","StyledGridSystemContainer","Grid_styled_templateObject","breakpoints","xl","StyledGridContainer","StyledGridColumnContainer","MediaQuery","_ref$children","breakpoint","setBreakpoint","callback","_ref2","windowWidth","innerWidth","_arr","entries","_i","_ref5","_ref4","bName","isFirstMount","useRef","useEffect","window","addEventListener","current","document","defaultView","removeEventListener","xs","sm","md","lg","xxl","lorem","GridSystem","Col","MediaQuery_MediaQuery","GridSystemRoute","StyledSectionContainer","Panels_styled_templateObject","Panels","colorTheme","marginTop","marginBottom","margins","PanelsRoute","Sections","maxWidth","SectionsRoute","getStyle","Box","className","Spacings","as","SpacingsRoute","Tabs_styled_templateObject","getLorem","arguments","undefined","Array","Math","round","random","fill","join","Tabs","Tabs_styled_StyledSectionContainer","items","id","content","TabsRoute","StyledTypographyContainer","Typographies_styled_templateObject","Typographies","Text","TypographiesRoute","__webpack_require__","d","__webpack_exports__","Page_StyleguidePage","reTrailingSlash","routes","StyleguidePage","currentRoute","currentUrl","location","pathname","replace","shouldRedirect","some","route","routeEnding","split","pop","endsWith","Layout_Layout","Redirect","Route_ButtonsRoute","Route_CarouselsRoute","Route_GridSystemRoute","Route_TypographiesRoute","Route_PanelsRoute","Route_SectionsRoute","Route_SpacingsRoute","Route_TabsRoute"],"mappings":"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","file":"static/js/7.7d02b244.chunk.js","sourcesContent":["import styled, { darken } from 'src/Theme';\n\nexport const StyledLayoutContainer = styled.div`\n  > ul {\n    list-style: none;\n\n    > li {\n      margin: 0 1em;\n      display: inline-block;\n\n      a {\n        color: ${props => props.theme.colorSet.secondary};\n\n        &:hover {\n          color: ${props => darken(props.theme.colorSet.secondary, 0.2)};\n        }\n      }\n    }\n  }\n`;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledLayoutContainer } from './Layout.styled';\n\nexport const Layout: FC<{ navItems: { title: string; url: string }[] }> = ({\n  navItems,\n  children,\n}) => (\n  <StyledLayoutContainer>\n    <ul>\n      {navItems.map(item => (\n        <li key={item.url}>\n          <Link to={item.url}>{item.title}</Link>\n        </li>\n      ))}\n    </ul>\n    <div>{children}</div>\n  </StyledLayoutContainer>\n);\n","import styled from 'src/Theme';\n\nexport const LayoutSection = styled.section`\n  width: 1200px;\n  margin: 0 auto;\n  padding-top: 2em;\n  padding-bottom: 6em;\n`;\n","import React, { useContext, useState, useCallback, SyntheticEvent } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { HeadTitle } from 'src/+Shared';\nimport { ThemeContext, fade } from 'src/Theme';\nimport { Button, Typography, Spacing, Section } from 'src/UI-Kits';\n\nconst getSectionTitle = (element: Element) => {\n  let node: Element | null = element;\n\n  do {\n    const title = node.querySelector('[data-variant=\"subheading\"]');\n    if (title) {\n      return title.textContent;\n    }\n    node = node.parentNode as Element;\n  } while (node && node.parentNode);\n\n  return 'Unknown section';\n};\n\nexport const Buttons = () => {\n  // This is how you access the theme declaratively\n  const theme = useContext(ThemeContext);\n  const [clickedTarget, setTarget] = useState('None');\n  const handleClick = useCallback((e: SyntheticEvent): void => {\n    e.preventDefault();\n\n    const target = e.target as Element | null;\n\n    if (target) {\n      const sectionTitle = getSectionTitle(target as Element);\n      const title = (target.childNodes.length > 0 && target.childNodes[0].textContent) || '';\n      setTarget(`${title} (from \"${sectionTitle}\" section)`);\n    }\n  }, []);\n\n  return (\n    <>\n      <HeadTitle title=\"Buttons\" suffix=\"Styleguide\" />\n\n      <div\n        style={{\n          top: '50%',\n          position: 'fixed',\n          zIndex: 10,\n          padding: '2em',\n          backgroundColor: fade('#fff', 0.4),\n          border: '1px solid #fff',\n          borderRadius: '0 1em 1em 0',\n          boxShadow: '0 0 20px rgba(0,0,0,0.051)',\n          userSelect: 'none',\n          pointerEvents: 'none',\n          fontWeight: 600,\n        }}\n      >\n        Last clicked button: <span>{clickedTarget}</span>\n      </div>\n\n      <Section variant=\"fluid\" style={{ textAlign: 'center' }}>\n        <Spacing margin={['auto', 'auto', 'md']}>\n          <Typography variant=\"subheading\" text=\"Button Sizes\" />\n        </Spacing>\n\n        <Button.Group>\n          <Button text=\"Large size\" size=\"large\" onClick={handleClick} />\n          <Button text=\"Default size\" size=\"default\" onClick={handleClick} />\n          <Button text=\"Small size\" size=\"small\" onClick={handleClick} />\n        </Button.Group>\n      </Section>\n\n      <Section variant=\"fluid\" backgroundTheme=\"light-gray\" style={{ textAlign: 'center' }}>\n        <Spacing margin={['auto', 'auto', 'md']}>\n          <Typography variant=\"subheading\" text=\"Button Styles\" />\n        </Spacing>\n\n        <Button.Group>\n          <Button text=\"Default or Primary\" variant=\"primary\" onClick={handleClick} />\n          <Button text=\"Secondary\" variant=\"secondary\" onClick={handleClick} />\n          <Button text=\"Gray\" variant=\"gray\" onClick={handleClick} />\n          <Button text=\"Outline\" variant=\"primary-outline\" onClick={handleClick} />\n          <Button text=\"Light outline\" variant=\"light-outline\" onClick={handleClick} />\n          <div\n            style={{\n              display: 'inline-block',\n              borderRadius: '1.8em',\n              backgroundColor: theme.colorSet.secondary,\n            }}\n          >\n            <Button text=\"Invert outline\" variant=\"invert-outline\" onClick={handleClick} />\n            <Button text=\"Cast outline\" variant=\"cast-outline\" onClick={handleClick} />\n          </div>\n        </Button.Group>\n      </Section>\n\n      <Section variant=\"fluid\" backgroundTheme=\"accent\" style={{ textAlign: 'center' }}>\n        <Spacing margin={['auto', 'auto', 'md']}>\n          <Typography\n            variant=\"subheading\"\n            text=\"All buttons on accent background\"\n            style={{ textTransform: 'capitalize' }}\n          />\n        </Spacing>\n\n        <Button.Group>\n          <Button text=\"Default\" onClick={handleClick} />\n          <Button variant=\"primary-outline\" text=\"Primary outline\" onClick={handleClick} />\n          <Button variant=\"light-outline\" text=\"Light outline\" onClick={handleClick} />\n          <Button variant=\"invert-outline\" text=\"Invert outline\" onClick={handleClick} />\n          <Button variant=\"cast-outline\" text=\"Cast outline\" onClick={handleClick} />\n        </Button.Group>\n      </Section>\n\n      <Section style={{ textAlign: 'center' }}>\n        <Spacing margin={['auto', 'auto', 'xs']}>\n          <Typography variant=\"subheading\" text=\"Link buttons\" style={{ textTransform: 'capitalize' }} />\n        </Spacing>\n        <Spacing margin={['auto', 'auto', 'md']}>\n          <Typography variant=\"body\">\n            These buttons are `A` html tag, you can use them to build native route or simple links. The following\n            examples have an `onClick` assign to them to cancel the click event. You can still open them by right click!\n          </Typography>\n        </Spacing>\n\n        <Button.Group>\n          <Button text=\"Route Link\" onClick={handleClick}>\n            <Link to=\"/styleguide\" />\n          </Button>\n          <Button text=\"Google.com\" onClick={handleClick}>\n            <a href=\"https://www.google.com\" rel=\"noopener\" target=\"_blank\" />\n          </Button>\n        </Button.Group>\n\n        <code style={{ display: 'inline-block', margin: '0 auto' }}>\n          <pre>{`<Button text=\"Route Link\" onClick={handleClick}>\n  <Link to=\"/styleguide\" />\n</Button>`}</pre>\n        </code>\n      </Section>\n\n      <Section backgroundTheme=\"light-gray\" style={{ textAlign: 'center' }}>\n        <Spacing margin={['auto', 'auto', 'xs']}>\n          <Typography variant=\"subheading\" text=\"Button group\" style={{ textTransform: 'capitalize' }} />\n        </Spacing>\n        <Spacing margin={['auto', 'auto', 'md']}>\n          <Typography variant=\"body\">\n            Button Group component helps you automatically align a group of button and manage their spacing.\n          </Typography>\n        </Spacing>\n\n        <Button.Group>\n          <Button text=\"Button #1\" onClick={handleClick} />\n          <Button text=\"Button #2\" onClick={handleClick} />\n        </Button.Group>\n\n        <code style={{ display: 'inline-block', margin: '0 auto' }}>\n          <pre>{`<Button.Group>\n  <Button text=\"Button #1\" onClick={handleClick} />\n  <Button text=\"Button #2\" onClick={handleClick} />\n</Button.Group>`}</pre>\n        </code>\n      </Section>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RouteChildrenProps } from 'react-router';\nimport { Buttons } from './Buttons';\n\nexport const ButtonsRoute: FC<RouteChildrenProps> = ({ match }) => (\n  <Route exact path={`${match ? match.url : ''}/buttons`} component={Buttons} />\n);\n","import React, { CSSProperties, useState } from 'react';\n\nimport { Carousel, Typography, Section } from 'src/UI-Kits';\nimport { getRandomColor, getForegroundColor } from 'src/Theme';\nimport { HeadTitle } from 'src/+Shared';\n\nconst getStandardStyles = (extra?: CSSProperties): CSSProperties => {\n  const backgroundColor = getRandomColor();\n  const color = getForegroundColor(backgroundColor);\n  return {\n    ...extra,\n    backgroundColor,\n    color,\n    fontSize: '4em',\n    height: '220px',\n    boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n  };\n};\n\nexport const Carousels = () => {\n  const [paddingValue, setPaddingValue] = useState(1);\n  return (\n    <>\n      <HeadTitle suffix=\"Styleguide\" title=\"Carousels\" />\n\n      <Section>\n        <Typography variant=\"headline\" text=\"Simple\" />\n        <Carousel>\n          <Carousel.Slide style={getStandardStyles()}>Slide 1</Carousel.Slide>\n          <Carousel.Slide style={getStandardStyles()}>Slide 2</Carousel.Slide>\n          <Carousel.Slide style={getStandardStyles()}>Slide 3</Carousel.Slide>\n        </Carousel>\n      </Section>\n\n      <Section backgroundTheme=\"light-gray\">\n        <Typography variant=\"headline\" text=\"Bigger Arrow and 2 Slides & draggable\" />\n        <Carousel draggable arrowSize=\"4.8em\" slidesToShow={2}>\n          <Carousel.Slide style={getStandardStyles()}>Slide 1</Carousel.Slide>\n          <Carousel.Slide style={getStandardStyles()}>Slide 2</Carousel.Slide>\n          <Carousel.Slide style={getStandardStyles()}>Slide 3</Carousel.Slide>\n          <Carousel.Slide style={getStandardStyles()}>Slide 4</Carousel.Slide>\n        </Carousel>\n      </Section>\n\n      <Section>\n        <Typography variant=\"headline\" text=\"Padding and Shadow for Slides\" />\n        <label>\n          <span>Set padding value: </span>\n          <input\n            type=\"number\"\n            value={paddingValue || '0'}\n            onChange={e => setPaddingValue(parseFloat(e.target.value))}\n          />\n        </label>\n        <Carousel slidesToShow={2} slidePadding={`${paddingValue}em`}>\n          <Carousel.Slide style={getStandardStyles()}>Slide 1</Carousel.Slide>\n          <Carousel.Slide style={getStandardStyles()}>Slide 2</Carousel.Slide>\n          <Carousel.Slide style={getStandardStyles()}>Slide 3</Carousel.Slide>\n          <Carousel.Slide style={getStandardStyles()}>Slide 4</Carousel.Slide>\n        </Carousel>\n      </Section>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RouteChildrenProps } from 'react-router';\nimport { Carousels } from './Carousels';\n\nexport const CarouselsRoute: FC<RouteChildrenProps> = ({ match }) => (\n  <Route exact path={`${match ? match.url : ''}/carousels`} component={Carousels} />\n);\n","import styled from 'src/Theme';\nimport { StyledGridContainer, StyledGridColumnContainer } from 'src/UI-Kits';\n\nexport const StyledGridSystemContainer = styled.div`\n  margin: 0 2em;\n  @media (min-width: ${props => props.theme.breakpoints.xl}px) {\n    margin: 0 8em;\n  }\n\n  ${StyledGridContainer} {\n    margin-bottom: 2em;\n  }\n  ${StyledGridColumnContainer} {\n    position: relative;\n    margin-bottom: 1em;\n\n    &:before {\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      content: '';\n      display: block;\n      position: absolute;\n      background-color: #fafafa;\n      margin-left: 1em;\n      margin-right: 1em;\n      border: 1px solid #e0e0e0;\n      border-width: 0 1px;\n      z-index: -1;\n    }\n  }\n\n  p {\n    text-align: justify;\n    margin-bottom: 0;\n  }\n\n  section > div {\n    padding: 1em 0;\n  }\n\n  ul {\n    margin-bottom: 1em;\n\n    > li {\n      margin-bottom: 0.6em;\n    }\n  }\n`;\n","import { FC, useContext, useEffect, useCallback, Fragment, useState, useRef } from 'react';\nimport { ThemeContext, ViewBreakpoint } from 'src/Theme';\n\nexport const MediaQuery: FC = ({ children = null }) => {\n  const { breakpoints } = useContext(ThemeContext);\n  const [breakpoint, setBreakpoint] = useState<ViewBreakpoint | null>(null);\n\n  const callback = useCallback(({ target }: Event) => {\n    const w = target as Window;\n    const windowWidth = w.innerWidth;\n    for (const [bName, bWidth] of Object.entries(breakpoints)) {\n      if (bWidth > windowWidth) {\n        return setBreakpoint(bName as ViewBreakpoint);\n      }\n    }\n    setBreakpoint('xxl');\n  }, []);\n\n  let isFirstMount = useRef(true);\n  useEffect(() => {\n    window.addEventListener('resize', callback);\n    if (isFirstMount.current) {\n      isFirstMount.current = false;\n      callback({ target: document.defaultView } as Event);\n    }\n    return () => window.removeEventListener('resize', callback);\n  });\n\n  if (typeof children === 'function') {\n    return children(breakpoint);\n  }\n  return null;\n};\n","import React from 'react';\n\nimport { Grid, Section, Typography } from 'src/UI-Kits';\nimport { HeadTitle } from 'src/+Shared';\nimport { StyledGridSystemContainer } from './Grid.styled';\nimport { MediaQuery } from './MediaQuery';\nimport { ViewBreakpoint } from 'src/Theme';\n\nconst breakpoints: { [key: string]: string } = {\n  xs: 'Extra Small',\n  sm: 'Small',\n  md: 'Medium',\n  lg: 'Large',\n  xl: 'Extra Large',\n  xxl: 'Double Extra Large',\n};\n\nconst lorem =\n  \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. \\\n  Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \\\n  when an unknown printer took a galley of type and scrambled it to make a type \\\n  specimen book.It has survived not only five centuries, but also the leap into \\\n  electronic typesetting, remaining essentially unchanged.It was popularised in \\\n  the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, \\\n  and more recently with desktop publishing software like Aldus PageMaker \\\n  including versions of Lorem Ipsum.\";\n\nexport const GridSystem = () => (\n  <>\n    <HeadTitle title=\"Grid System\" suffix=\"Styleguide\" />\n\n    <StyledGridSystemContainer>\n      <Section variant=\"fluid\">\n        <Typography variant=\"headline\" text=\"Grid System\" />\n        <p>\n          The grid system is generic and clever at the same time. We designed it this way to cover most of responsive\n          layouts the use-cases.\n        </p>\n        <p>\n          The column component <strong>`{`<Grid.Col />`}`</strong> has a flexible API to help you achieve different\n          use-cases. Here is how it works:\n          <ul>\n            <li>\n              If you dont set any breakpoint props, the available width will equally be divided to all the columns\n            </li>\n            <li>\n              You can set the breakpoint props to an explicit size value:\n              <br />\n              <strong>`{`<Grid.Col xs={12} lg={6} />`}`</strong> respectively is 12/12 in extra small, 6/12 in small and\n              the rest of breakpoints are calculated based on the closest breakpoint. (In this case small and medium\n              breakpoints are size 12/12 and extra large and double extra large breakpoints are 6/12.)\n            </li>\n            <li>You can set the `size` prop to set all of the breakpoints to the same size.</li>\n          </ul>\n        </p>\n\n        <Typography variant=\"subheading\" text=\"Columns without any size or breakpoint props\" />\n        <Grid>\n          <Grid.Col>\n            <h3>1/2</h3>\n            <p>{lorem}</p>\n          </Grid.Col>\n          <Grid.Col>\n            <h3>1/2</h3>\n            <p>{lorem}</p>\n          </Grid.Col>\n        </Grid>\n      </Section>\n\n      <Section variant=\"fluid\">\n        <Typography variant=\"subheading\" text=\"Size &amp; Breakpoint Props (Responsive)\" />\n        <MediaQuery>\n          {(breakpoint: string) => (\n            <p>\n              Current breakpoint:{' '}\n              <strong>\n                {breakpoints[breakpoint]} ({breakpoint})\n              </strong>\n            </p>\n          )}\n        </MediaQuery>\n\n        <Grid>\n          <Grid.Col xs={12} lg={6} xxl={4}>\n            <h3>{`xs={12} lg={6} xxl={4}`}</h3>\n            <p>{lorem}</p>\n          </Grid.Col>\n          <Grid.Col xs={12} lg={6} xxl={4}>\n            <h3>{`xs={12} lg={6} xxl={4}`}</h3>\n            <p>{lorem}</p>\n          </Grid.Col>\n          <Grid.Col xs={12} xxl={4}>\n            <h3>{`xs={12} xxl={4}`}</h3>\n            <p>{lorem}</p>\n          </Grid.Col>\n          <Grid.Col size={12}>\n            <h3>{`size={12}`}</h3>\n            <p>{lorem}</p>\n          </Grid.Col>\n        </Grid>\n      </Section>\n    </StyledGridSystemContainer>\n  </>\n);\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RouteChildrenProps } from 'react-router';\nimport { GridSystem } from './Grid';\n\nexport const GridSystemRoute: FC<RouteChildrenProps> = ({ match }) => (\n  <Route exact path={`${match ? match.url : ''}/grid-system`} component={GridSystem} />\n);\n","import styled from 'src/Theme';\n\nexport const StyledSectionContainer = styled.div`\n  margin: 4em 0;\n`;\n","import React, { FC } from 'react';\n\nimport { Panel, Typography, Grid, Button, Section } from 'src/UI-Kits';\nimport { HeadTitle } from 'src/+Shared';\nimport { StyledSectionContainer } from './Panels.styled';\n\nexport const Panels: FC = () => {\n  return (\n    <>\n      <HeadTitle title=\"Panels\" suffix=\"Styleguide\" />\n\n      <Section>\n        <Typography variant=\"headline\" text=\"One Sample Panel\" />\n        <StyledSectionContainer>\n          <Panel>Content 1</Panel>\n        </StyledSectionContainer>\n      </Section>\n\n      <Section backgroundTheme=\"accent\">\n        <Typography variant=\"headline\" text=\"Tree Sample Panel\" />\n        <StyledSectionContainer style={{ textAlign: 'center' }}>\n          <Grid>\n            <Grid.Col>\n              <Panel>\n                <Typography\n                  variant=\"subheading\"\n                  colorTheme=\"primary\"\n                  style={{ marginTop: 0, marginBottom: 0 }}\n                >\n                  <b>Sample</b>\n                </Typography>\n              </Panel>\n            </Grid.Col>\n            <Grid.Col>\n              <Panel variant=\"with-top-accent\" margins=\"out-standing\">\n                <div>\n                  <Typography variant=\"subheading\" colorTheme=\"primary\" style={{ marginTop: 0 }}>\n                    <b>Out Standing Margins</b>\n                  </Typography>\n                  <Typography variant=\"body\">\n                    <ul>\n                      <li>Item 1</li>\n                      <li>Item 2</li>\n                      <li>Item 3</li>\n                    </ul>\n                  </Typography>\n                  <code style={{ textAlign: 'initial' }}>\n                    <pre>\n                      {`<Panel variant=\"with-top-accent\" margins=\"out-standing\">\n  Content\n</Panel>`}\n                    </pre>\n                  </code>\n                </div>\n                <Button text=\"Select Option\" variant=\"light-outline\" />\n              </Panel>\n            </Grid.Col>\n            <Grid.Col>\n              <Panel>Content 3</Panel>\n            </Grid.Col>\n          </Grid>\n        </StyledSectionContainer>\n      </Section>\n\n      <Section backgroundTheme=\"light-gray\">\n        <Typography variant=\"headline\" text=\"Four Sample Panel\" />\n        <StyledSectionContainer style={{ textAlign: 'center' }}>\n          <Grid>\n            <Grid.Col>\n              <Panel>\n                <Typography\n                  variant=\"subheading\"\n                  style={{ marginTop: 0, marginBottom: 0 }}\n                  text=\"iOS/MacOS Apps\"\n                />\n              </Panel>\n            </Grid.Col>\n            <Grid.Col>\n              <Panel>\n                <Typography\n                  variant=\"subheading\"\n                  style={{ marginTop: 0, marginBottom: 0 }}\n                  text=\"Android Applications\"\n                />\n              </Panel>\n            </Grid.Col>\n            <Grid.Col>\n              <Panel>\n                <Typography\n                  variant=\"subheading\"\n                  style={{ marginTop: 0, marginBottom: 0 }}\n                  text=\"Cloud Development\"\n                />\n              </Panel>\n            </Grid.Col>\n            <Grid.Col>\n              <Panel>\n                <Typography\n                  variant=\"subheading\"\n                  style={{ marginTop: 0, marginBottom: 0 }}\n                  text=\"Call Center Solutions\"\n                />\n              </Panel>\n            </Grid.Col>\n          </Grid>\n        </StyledSectionContainer>\n      </Section>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RouteChildrenProps } from 'react-router';\nimport { Panels } from './Panels';\n\nexport const PanelsRoute: FC<RouteChildrenProps> = ({ match }) => (\n  <Route exact path={`${match ? match.url : ''}/panels`} component={Panels} />\n);\n","import React, { FC } from 'react';\n\nimport { Panel, Typography, Grid, Button, Section } from 'src/UI-Kits';\nimport { HeadTitle } from 'src/+Shared';\n\nexport const Sections: FC = () => (\n  <>\n    <HeadTitle title=\"Sections\" suffix=\"Styleguide\" />\n\n    <Section>\n      <Typography variant=\"headline\">Default Section</Typography>\n      <Typography variant=\"body\">\n        Here is how it looks like to build a default section that has a limited width:\n        <code>\n          <pre>{`<Section>\n  <Typography variant=\"body\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</Typography>\n</Section>`}</pre>\n        </code>\n      </Typography>\n    </Section>\n\n    <Section backgroundTheme=\"light-gray\">\n      <Typography variant=\"headline\">Default Section with gray background theme</Typography>\n      <Typography variant=\"body\">\n        it's important to mix it with different background theme. This way is easier to distinguish each section from\n        the next one.\n        <code>\n          <pre>{`<Section backgroundTheme=\"light-gray\">\n  <Typography variant=\"body\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</Typography>\n</Section>`}</pre>\n        </code>\n      </Typography>\n    </Section>\n\n    <Section>\n      <Typography variant=\"subheading\">Dummy White Section</Typography>\n    </Section>\n\n    <Section backgroundTheme=\"accent\">\n      <Typography variant=\"headline\">Default Section with accent background theme</Typography>\n      <Typography variant=\"body\">\n        it's important to mix it with different background theme. This way is easier to distinguish each section from\n        the next one.\n        <code>\n          <pre>{`<Section backgroundTheme=\"light-gray\">\n  <Typography variant=\"body\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</Typography>\n</Section>`}</pre>\n        </code>\n      </Typography>\n    </Section>\n\n    <Section variant=\"fluid\">\n      <div style={{ maxWidth: '600px', padding: '0 2em', margin: '0 auto' }}>\n        <Typography variant=\"headline\">Fluid Section</Typography>\n        <Typography variant=\"body\">\n          Fluid variant doesn't limit the width of the content so you have more flexibility over styling the content:\n          <code>\n            <pre>{`<Section variant=\"fluid\">\n  <div style={{ maxWidth: '600px', padding: '0 2em', margin: '0 auto' }}>\n    <Typography variant=\"body\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</Typography>\n  </div>\n</Section>`}</pre>\n          </code>\n        </Typography>\n      </div>\n    </Section>\n\n    <Section backgroundTheme={['#042E5E', '#05548C']}>\n      <Typography variant=\"headline\">Section with Custom Background Color</Typography>\n      <Typography variant=\"body\">\n        Code sample:\n        <code>\n          <pre>{`<Section backgroundTheme={['#042E5E', '#05548C']}>\n  <Typography variant=\"body\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</Typography>\n</Section>`}</pre>\n        </code>\n      </Typography>\n    </Section>\n\n    <Section>\n      <Typography variant=\"subheading\">Dummy White Section</Typography>\n    </Section>\n\n    <Section variant=\"right-round\" backgroundTheme=\"accent\">\n      <Typography variant=\"headline\">Section with Right Space</Typography>\n      <Typography variant=\"body\">\n        Code sample:\n        <code>\n          <pre>{`<Section variant=\"right-space\" backgroundTheme=\"accent\">\n  <Typography variant=\"body\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</Typography>\n</Section>`}</pre>\n        </code>\n      </Typography>\n    </Section>\n\n    <Section>\n      <Typography variant=\"subheading\">Dummy White Section</Typography>\n    </Section>\n\n    <Section variant=\"left-round\" backgroundTheme=\"accent\">\n      <Typography variant=\"headline\">Section with Left Space</Typography>\n      <Typography variant=\"body\">\n        Code sample:\n        <code>\n          <pre>{`<Section variant=\"left-space\" backgroundTheme=\"accent\">\n  <Typography variant=\"body\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</Typography>\n</Section>`}</pre>\n        </code>\n      </Typography>\n    </Section>\n  </>\n);\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RouteChildrenProps } from 'react-router';\nimport { Sections } from './Sections';\n\nexport const SectionsRoute: FC<RouteChildrenProps> = ({ match }) => (\n  <Route exact path={`${match ? match.url : ''}/sections`} component={Sections} />\n);\n","import React, { FC } from 'react';\n\nimport { HeadTitle } from 'src/+Shared';\nimport { getRandomColor, getForegroundColor } from 'src/Theme';\nimport { Section, Typography, Spacing } from 'src/UI-Kits';\n\nconst getStyle = () => {\n  const backgroundColor = getRandomColor();\n  const color = getForegroundColor(backgroundColor);\n  const border = `1px solid #000`;\n  return { color, backgroundColor, border };\n};\n\nconst Box: FC<{ className: string }> = ({ className, children }) => (\n  <div className={className} style={getStyle()}>\n    {children}\n  </div>\n);\n\nexport const Spacings: FC = () => (\n  <>\n    <HeadTitle title=\"Spacing\" suffix=\"Styleguide\" />\n\n    <Section>\n      <Spacing margin={['md']}>\n        <Typography variant=\"headline\" text=\"Medium Margin Spacing\" />\n      </Spacing>\n      <code>\n        <pre>{`<Spacing margin={['md']}>\n  <Typography variant=\"headline\" text=\"Medium Margin Spacing\" />\n</Spacing>`}</pre>\n      </code>\n      <Spacing margin={['md', '0']}>\n        <Typography variant=\"body\">Margin Spacing - top: medium, right: 0, bottom: medium, left: 0</Typography>\n      </Spacing>\n      <code>\n        <pre>{`<Spacing margin={['md', '0']}>\n  <Typography variant=\"body\">Margin Spacing - top: medium, right: 0, bottom: medium, left: 0</Typography>\n</Spacing>`}</pre>\n      </code>\n      <Spacing padding={['xl', '0', 'md']}>\n        <Typography variant=\"body\">Padding Spacing - top: extra large, right: 0, bottom: medium, left: 0</Typography>\n      </Spacing>\n      <code>\n        <pre>{`<Spacing padding={['xl', '0', 'md']}>\n  <Typography variant=\"body\">Padding Spacing - top: extra large, right: 0, bottom: medium, left: 0</Typography>\n</Spacing>`}</pre>\n      </code>\n    </Section>\n\n    <Section backgroundTheme=\"accent\">\n      <Spacing padding={['md']} as={Box}>\n        <div style={{ ...getStyle(), padding: '1em' }}>\n          <Spacing padding={['md']} as=\"div\">\n            <Typography variant=\"body\" component=\"span\">\n              Apply spacing to a box\n            </Typography>\n          </Spacing>\n          <Spacing padding={['lg']} as={Box}>\n            <div style={{ ...getStyle(), height: '200px', padding: '2em' }}>\n              Apply medium padding to a wrapper and then apply medium margin.\n            </div>\n          </Spacing>\n        </div>\n      </Spacing>\n    </Section>\n  </>\n);\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RouteChildrenProps } from 'react-router';\nimport { Spacings } from './Spacings';\n\nexport const SpacingsRoute: FC<RouteChildrenProps> = ({ match }) => (\n  <Route exact path={`${match ? match.url : ''}/spacings`} component={Spacings} />\n);\n","import styled from 'src/Theme';\n\nexport const StyledSectionContainer = styled.div`\n  margin: 4em auto;\n  padding: 1em;\n  max-width: 800px;\n`;\n","import React from 'react';\nimport { Section, Tab } from 'src/UI-Kits';\nimport { HeadTitle } from 'src/+Shared';\nimport { StyledSectionContainer } from './Tabs.styled';\n\nconst lorem = 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.';\n\nconst getLorem = (prefix: string = '') =>\n  prefix +\n  '\\n' +\n  Array(Math.round(Math.random() * 5) + 4)\n    .fill(lorem)\n    .join(' ');\n\nexport const Tabs = () => {\n  return (\n    <>\n      <HeadTitle title=\"Tabs\" suffix=\"Styleguide\" />\n      <Section>\n        <StyledSectionContainer>\n          <Tab\n            items={[\n              { id: 'c1', title: 'Tab 1', content: getLorem('Tab 1 content') },\n              { id: 'c2', title: 'Tab 2', content: getLorem('Tab 2 content') },\n              { id: 'c3', title: 'Tab 3', content: getLorem('Tab 3 content') },\n              { id: 'c4', title: 'Tab 4', content: getLorem('Tab 4 content') },\n            ]}\n          />\n        </StyledSectionContainer>\n      </Section>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RouteChildrenProps } from 'react-router';\nimport { Tabs } from './Tabs';\n\nexport const TabsRoute: FC<RouteChildrenProps> = ({ match }) => (\n  <Route exact path={`${match ? match.url : ''}/tabs`} component={Tabs} />\n);\n","import styled from 'src/Theme';\n\nexport const StyledTypographyContainer = styled.div`\n  > section {\n    margin-bottom: 2em;\n  }\n`;\n","import React from 'react';\n\nimport { HeadTitle } from 'src/+Shared';\nimport { Typography, Section, Panel, Grid } from 'src/UI-Kits';\nimport { StyledTypographyContainer } from './Typographies.styled';\n\nexport const Typographies = () => (\n  <StyledTypographyContainer>\n    <HeadTitle title=\"Typography\" suffix=\"Styleguide\" />\n\n    <Section>\n      <Typography.Text>\n        <Typography variant=\"title\" text=\"Title\" />\n        <Typography variant=\"body\">\n          First paragraph. Welcome to our wonderful world. We sincerely hope that each and every\n          user entering our website will find exactly what he/she is looking for. With advanced\n          features of activating account and new login widgets, you will definitely have a great\n          experience of using our web page.\n        </Typography>\n        <Typography variant=\"body\">\n          Second paragraph. Welcome to our wonderful world. We sincerely hope that each and every\n          user entering our website will find exactly what he/she is looking for. With advanced\n          features of activating account and new login widgets, you will definitely have a great\n          experience of using our web page.\n        </Typography>\n      </Typography.Text>\n    </Section>\n\n    <Section backgroundTheme=\"light-gray\">\n      <Typography.Text>\n        <Typography variant=\"headline\">Headline</Typography>\n        <Typography variant=\"body\">\n          First paragraph. Welcome to our wonderful world. We sincerely hope that each and every\n          user entering our website will find exactly what he/she is looking for. With advanced\n          features of activating account and new login widgets, you will definitely have a great\n          experience of using our web page.\n        </Typography>\n        <Typography variant=\"body\">\n          Second paragraph. Welcome to our wonderful world. We sincerely hope that each and every\n          user entering our website will find exactly what he/she is looking for. With advanced\n          features of activating account and new login widgets, you will definitely have a great\n          experience of using our web page.\n        </Typography>\n      </Typography.Text>\n    </Section>\n\n    <Section>\n      <Typography.Text>\n        <Typography variant=\"subheading\">Subheading</Typography>\n        <Typography variant=\"body\">\n          First paragraph. Welcome to our wonderful world. We sincerely hope that each and every\n          user entering our website will find exactly what he/she is looking for. With advanced\n          features of activating account and new login widgets, you will definitely have a great\n          experience of using our web page.\n        </Typography>\n        <Typography variant=\"body\">\n          Second paragraph. Welcome to our wonderful world. We sincerely hope that each and every\n          user entering our website will find exactly what he/she is looking for. With advanced\n          features of activating account and new login widgets, you will definitely have a great\n          experience of using our web page.\n        </Typography>\n      </Typography.Text>\n    </Section>\n\n    <Section backgroundTheme=\"light-gray\">\n      <Typography.Text>\n        <Typography variant=\"headline\" text=\"Typography Text component\" />\n        <Typography variant=\"body\">\n          If you need to align a group of Typography components together you can wrap them with\n          Typography.Text component. This component apply the right margins depending on the variant\n          and position of the Typography.\n        </Typography>\n        <Typography variant=\"body\" component=\"code\">\n          <pre>\n            {`<Typography.Text>\n  <Typography variant=\"headline\" text=\"Typography Text\" />\n  <Typography variant=\"body\">\n    If you need to align a group of Typography components together you can wrap them with\n    Typography.Text component. This component apply the right margins depending on the variant\n    and position of the Typography.\n  </Typography>\n</Typography.Text>`}\n          </pre>\n        </Typography>\n      </Typography.Text>\n    </Section>\n\n    <Section>\n      <Typography variant=\"headline\" text=\"HTML Text Elements\" />\n      <Typography variant=\"body\">\n        <b>Bold text</b> <mark>This is a highlighted text</mark>{' '}\n        <span className=\"strike-text\">This is a strickethrough text</span>{' '}\n        <span className=\"underline-text\">This is an underlined text.</span>\n      </Typography>\n      <code>\n        <pre>\n          {`<Typography variant=\"body\">\n  <b>Bold text</b> <mark>This is a highlighted text</mark>\n  <span className=\"strike-text\">This is a strickethrough text</span>\n  <span className=\"underline-text\">This is an underlined text.</span>\n</Typography>`}\n        </pre>\n      </code>\n      <Typography variant=\"body\">\n        Welcome to our wonderful world. We sincerely hope that each and every user entering our\n        website will find exactly what he/she is looking forLinkHover linkPress linkWith advanced\n        features of activating account and new login widgets, you will definitely have a great\n        experience of using our web page.\n      </Typography>\n    </Section>\n\n    <Section backgroundTheme=\"accent\">\n      <Typography variant=\"headline\" text=\"Section with accent color\" />\n      <Typography variant=\"body\">\n        <b>Bold text</b> <mark>This is a highlighted text</mark>{' '}\n        <span className=\"strike-text\">This is a strickethrough text</span>{' '}\n        <span className=\"underline-text\">This is an underlined text.</span>\n      </Typography>\n    </Section>\n\n    <Section backgroundTheme=\"accent\">\n      <Grid>\n        <Grid.Col>\n          <Panel variant=\"with-top-accent\">\n            <Typography.Text>\n              <Typography variant=\"headline\" text=\"Section & Panel\" />\n              <Typography variant=\"body\">\n                Welcome to our wonderful world. We sincerely hope that each and every user entering\n                our website will find exactly what he/she is looking forLinkHover linkPress linkWith\n                advanced features of activating account and new login widgets, you will definitely\n                have a great experience of using our web page.\n              </Typography>\n            </Typography.Text>\n          </Panel>\n        </Grid.Col>\n        <Grid.Col>\n          <Panel variant=\"with-top-accent\">\n            <Typography.Text>\n              <Typography variant=\"headline\" text=\"Section & Panel\" />\n              <Typography variant=\"body\">\n                Welcome to our wonderful world. We sincerely hope that each and every user entering\n                our website will find exactly what he/she is looking forLinkHover linkPress linkWith\n                advanced features of activating account and new login widgets, you will definitely\n                have a great experience of using our web page.\n              </Typography>\n            </Typography.Text>\n          </Panel>\n        </Grid.Col>\n      </Grid>\n    </Section>\n  </StyledTypographyContainer>\n);\n","import React, { FC } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RouteChildrenProps } from 'react-router';\nimport { Typographies } from './Typographies';\n\nexport const TypographiesRoute: FC<RouteChildrenProps> = ({ match }) => (\n  <Route exact path={`${match ? match.url : ''}/typographies`} component={Typographies} />\n);\n","import React, { FC } from 'react';\nimport { RouteChildrenProps, Redirect } from 'react-router';\n\nimport { Layout } from './+Layout';\nimport { ButtonsRoute } from './Buttons';\nimport { CarouselsRoute } from './Carousels';\nimport { GridSystemRoute } from './GridSystem';\nimport { PanelsRoute } from './Panels';\nimport { SectionsRoute } from './Sections';\nimport { SpacingsRoute } from './Spacings';\nimport { TabsRoute } from './Tabs';\nimport { TypographiesRoute } from './Typographies';\n\nconst reTrailingSlash = /\\/$/;\nconst routes = [\n  { title: '<< Exit StyleGuide >>', url: '../' },\n  { title: 'Buttons', url: './buttons' },\n  { title: 'Carousels', url: './carousels' },\n  { title: 'Grid System', url: './grid-system' },\n  { title: 'Panels', url: './panels' },\n  { title: 'Sections', url: './sections' },\n  { title: 'Spacing', url: './spacings' },\n  { title: 'Tabs', url: './tabs' },\n  { title: 'Typographies', url: './typographies' },\n];\nconst isValidRoute = (currentRoute: string) =>\n  routes.some(route => {\n    const routeEnding = route.url.split('/').pop()!;\n    return routeEnding ? currentRoute.endsWith(routeEnding) : false;\n  }) === false;\n\nexport const StyleguidePage: FC<RouteChildrenProps> = props => {\n  const { location } = props;\n  const currentUrl = location.pathname.replace(reTrailingSlash, '');\n  const shouldRedirect = isValidRoute(currentUrl);\n\n  return (\n    <Layout navItems={routes}>\n      {shouldRedirect && <Redirect to=\"/styleguide/buttons\" />}\n      <ButtonsRoute {...props} />\n      <CarouselsRoute {...props} />\n      <GridSystemRoute {...props} />\n      <TypographiesRoute {...props} />\n      <PanelsRoute {...props} />\n      <SectionsRoute {...props} />\n      <SpacingsRoute {...props} />\n      <TabsRoute {...props} />\n    </Layout>\n  );\n};\n\nexport default StyleguidePage;\n"],"sourceRoot":""}